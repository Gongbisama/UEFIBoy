import sys

#Release environment
release_env = Environment( 
                CCFLAGS = '-O2 -fomit-frame-pointer -W -Wall -Wextra'
		    )

#Profile environment
profile_env = Environment(
		        CCFLAGS = '-pg -O2 -W -Wall -Wextra',
		        LINKFLAGS = '-pg'
            )

#Debug environment
debug_env = Environment(CCFLAGS = '-g -W -Wall -Wextra')

env = release_env
compiler = 'clang'
framework = 'sdl2'

cxxcompiler = 'clang++'

for key, value in ARGLIST:
    if key == 'cc':
        if value == 'gcc':
            compiler = 'gcc -std=c99'
            cxxcompiler = 'g++'
        elif value == 'clang':
            compiler = 'clang'
            cxxcompiler = 'clang++'
        else:
            print("build error expected cc=clang or cc=gcc");
    
    elif key == 'mode':
        if value == 'prof':
            env = profile_env
        elif value == 'debug':
            env = debug_env
        elif value == 'release':
            env = release_env
        else:
            print("unknown mode, expected either prof, debug, or release")
    
    elif key == 'framework':
        if value == 'sdl':
            framework = 'sdl'
        elif value == 'sdl2':
            framework = 'sdl2'
        else:
            printf("Unknown framework, expecting either sdl or sdl2");
    else:
        print("Unknown setting:" + key)


env.Replace(CC = compiler)
env.Replace(CXX = cxxcompiler)

if framework == 'sdl':
    env.Append(LIBS = ['SDL','SDL_net'])
    env.Append(CPPPATH = ['/usr/include/SDL'])
    env.Append(CPPPATH = ['/usr/local/include/SDL'])

elif framework == 'sdl2':
    env.Append(LIBS = ['SDL2','SDL2_net'])
    env.Append(CPPPATH = ['/usr/include/SDL2'])
    env.Append(CPPPATH = ['/usr/local/include/SDL2'])

#SDL for OSX uses Cocoa
if sys.platform == 'darwin':
	env.AppendUnique(FRAMEWORKS = ['Cocoa'])

sourceObjs = env.Object( Glob('../../src/core/*.c'))\
           + env.Object( Glob('../../src/core/mmu/*.c'))\
           + env.Object( Glob('../../src/core/audio/*.cpp'))\
           + env.Object( Glob('../../src/platforms/standard/*.c'))\
           + env.Object( Glob('../../src/shared_libs/*.c'))\

if framework == 'sdl':
    sourceObjs += env.Object( Glob('../../src/shared_libs/SDL/*.cpp'))\
                + env.Object( Glob('../../src/shared_libs/SDL/audio/*.cpp'))\
                + env.Object( Glob('../../src/shared_libs/SDL/*.c'))

elif framework == 'sdl2':
    sourceObjs += env.Object( Glob('../../src/shared_libs/SDL2/*.cpp'))\
                + env.Object( Glob('../../src/shared_libs/SDL2/audio/*.cpp'))\
                + env.Object( Glob('../../src/shared_libs/SDL2/*.c'))


env.Program('gb_emu',sourceObjs)


